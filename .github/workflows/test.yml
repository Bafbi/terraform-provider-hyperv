# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'examples/**'
  push:
    branches:
      - main
      - 'feat/**'
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - 'examples/**'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      
      - uses: jdx/mise-action@v2
        with:
          version: 2025.10.20
          install: true
          cache: true
      
      - run: go mod download
      
      - run: go build -v .
      
      - name: Run linters
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  # Run go fmt and check for differences
  format:
    name: Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      
      - uses: jdx/mise-action@v2
        with:
          version: 2025.10.20
          install: true
          cache: true
      
      - run: go fmt ./...
      
      - name: Check for differences
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference after go fmt. Please run 'go fmt ./...' and commit."; exit 1)

  # Ensure generated code is up to date
  generate:
    name: Generate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - uses: jdx/mise-action@v2
        with:
          version: 2025.10.20
          install: true
          cache: true
      
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      
      - run: mise run docs
      
      - name: Check for differences
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'mise run docs' command and commit."; exit 1)

  # Run unit tests
  test-unit:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - uses: jdx/mise-action@v2
        with:
          version: 2025.10.20
          install: true
          cache: true
      
      - run: go mod download
      
      - name: Run unit tests
        run: go test -v -cover -short ./...
        timeout-minutes: 5

  # Run acceptance tests in a matrix with Terraform CLI versions
  # Note: This provider requires Windows Hyper-V, so acceptance tests
  # are configured but may need to be run in a separate Windows environment
  test-acceptance:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # List whatever Terraform versions here you would like to support
        terraform:
          - '1.9.*'
          - '1.10.*'
          - '1.11.*'
          - '1.12.*'
          - '1.13.*'
    steps:
      - uses: actions/checkout@v4
      
      - uses: jdx/mise-action@v2
        with:
          version: 2025.10.20
          install: true
          cache: true
      
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      
      - run: go mod download
      
      # Note: Acceptance tests require a Windows Hyper-V host to run against
      # These tests are skipped in CI but can be run locally with TF_ACC=1
      - name: Run acceptance tests
        env:
          TF_ACC: "1"
          # Skip tests that require actual Hyper-V infrastructure
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        run: |
          echo "Acceptance tests require Windows Hyper-V host"
          echo "Run locally with: TF_ACC=1 go test -v ./internal/provider/"
          # Uncomment when you have a Windows runner with Hyper-V
          # go test -v -cover ./internal/provider/
        timeout-minutes: 10
