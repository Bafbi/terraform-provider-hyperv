[tools]
go = "latest"
golangci-lint = "2.6.0"
terraform = "latest"

[env]
TF_CLI_CONFIG_FILE = ".terraformrc"

[tasks.build]
description = "Build the provider binary"
run = "go build -o terraform-provider-hyperv"

[tasks.install]
description = "Build and install the provider"
run = "go install ."
depends = ["build"]
  
[tasks.test]
description = "Run unit tests"
run = "go test ./... -v -short -timeout 10m"

[tasks.testacc]
description = "Run acceptance tests"
env = { TF_ACC = "1" }
run = "go test ./... -v -timeout 120m"

[tasks.fmt]
description = "Format Go and Terraform code"
run = """
go fmt ./...
terraform fmt -recursive ./examples/
"""

[tasks.lint]
description = "Run linter"
run = "golangci-lint run"

[tasks.docs]
description = "Generate documentation"
run = "go generate ./..."

[tasks.clean]
description = "Clean build artifacts"
run = """
rm -f terraform-provider-hyperv
go clean
"""

[tasks.dev-init]
description = "Initialize dev environment for testing"
run = """
cd dev
rm -rf .terraform .terraform.lock.hcl
terraform init
"""
depends = ["install"]

[tasks.dev-plan]
description = "Run terraform plan in dev directory"
run = "terraform -chdir=dev plan"
depends = ["install"]

[tasks.dev-apply]
description = "Run terraform apply in dev directory"
run = "terraform -chdir=dev apply"
depends = ["install"]

[tasks.dev-destroy]
description = "Run terraform destroy in dev directory"
run = "terraform -chdir=dev destroy"

[tasks.setup]
description = "Initial setup and install dependencies"
run = """
echo "Setting up terraform-provider-hyperv development environment..."
go mod download
go mod tidy
echo "✅ Setup complete! Generating .terraformrc..."
mise run config
echo "✅ Setup finished. Run 'mise run install' to build and install the provider."
"""

[tasks.config]
description = "Generate .terraformrc with dynamic paths"
run = """
# Generate .terraformrc using template
GOBIN=$(go env GOBIN)
if [ -z "$GOBIN" ]; then
  GOPATH=$(go env GOPATH)
  GOBIN="$GOPATH/bin"
fi

if [ -f ".terraformrc.tpl" ]; then
  sed "s|__GOBIN__|$GOBIN|g" .terraformrc.tpl > .terraformrc
  echo "✅ Generated .terraformrc from template with GOBIN=$GOBIN"
else
  echo "❌ Template .terraformrc.tpl not found in workspace root"
  exit 1
fi
"""

[tasks.verify]
description = "Verify the installation"
run = """
echo "Checking provider binary..."
ls -lh ~/.local/share/mise/installs/go/*/bin/terraform-provider-hyperv || echo "Provider not installed"
echo ""
echo "Environment variables:"
echo "  TF_CLI_CONFIG_FILE=$TF_CLI_CONFIG_FILE"
"""
